// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
)

const createAnime = `-- name: CreateAnime :one
INSERT INTO anime (id, title, completion)
VALUES (?, ?, ?)
RETURNING id, title, completion
`

type CreateAnimeParams struct {
	ID         int64
	Title      string
	Completion string
}

func (q *Queries) CreateAnime(ctx context.Context, arg CreateAnimeParams) (Anime, error) {
	row := q.db.QueryRowContext(ctx, createAnime, arg.ID, arg.Title, arg.Completion)
	var i Anime
	err := row.Scan(&i.ID, &i.Title, &i.Completion)
	return i, err
}

const getAnime = `-- name: GetAnime :one
SELECT id, title, completion FROM anime
WHERE id = ? LIMIT 1
`

func (q *Queries) GetAnime(ctx context.Context, id int64) (Anime, error) {
	row := q.db.QueryRowContext(ctx, getAnime, id)
	var i Anime
	err := row.Scan(&i.ID, &i.Title, &i.Completion)
	return i, err
}
